name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [21]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        working-directory: gnuplot-java
        run: mvn -B clean install -DskipTests

      - name: Run tests
        working-directory: gnuplot-java
        run: mvn -B test

      - name: Generate JaCoCo coverage report
        working-directory: gnuplot-java
        run: mvn -B jacoco:report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./gnuplot-java/**/target/site/jacoco/jacoco.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: gnuplot-java/**/target/surefire-reports/

      - name: Archive JaCoCo reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-reports
          path: gnuplot-java/**/target/site/jacoco/

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven

      - name: Run Checkstyle
        working-directory: gnuplot-java
        run: mvn -B checkstyle:check || true

      - name: Run SpotBugs
        working-directory: gnuplot-java
        run: mvn -B spotbugs:check || true

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: gnuplot_test
          POSTGRES_USER: gnuplot
          POSTGRES_PASSWORD: gnuplot_pass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven

      - name: Run integration tests
        working-directory: gnuplot-java
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/gnuplot_test
          SPRING_DATASOURCE_USERNAME: gnuplot
          SPRING_DATASOURCE_PASSWORD: gnuplot_pass
          SPRING_REDIS_HOST: localhost
          SPRING_REDIS_PORT: 6379
        run: mvn -B verify -DskipUnitTests